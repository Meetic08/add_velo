width = 2, fill = "skyblue", color = "black", alpha = 0.7) +
geom_density(alpha = 0.2) +
labs(title = "Distribution des accidents au fil des années") +
theme_minimal()
# Créer un facteur ordonné avec les niveaux des mois
data$mois <- factor(data$mois, levels = c("janvier", "fevrier", "mars", "avril", "mai", "juin", "juillet", "aout", "septembre", "octobre", "novembre", "decembre"))
plot2 <- ggplot(data, aes(x = mois)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Distribution des accidents par mois") +
theme_minimal() +
scale_x_discrete(breaks = c("janvier", "avril", "aout", "decembre"))
# Créer un facteur ordonné avec les niveaux des jours
data$jour <- factor(data$jour, levels = c("lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi", "dimanche"))
plot3 <- ggplot(data, aes(x = jour)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Distribution des accidents par jour de la semaine") +
theme_minimal() +
scale_x_discrete(breaks = c("lundi", "mercredi", "vendredi", "dimanche"))
# Créer un facteur ordonné avec les niveaux les heures
data$Tranche_horaire <- factor(data$Tranche_horaire, levels = c("Matin", "Apres-midi", "Soir", "Nuit", "NA"))
plot4 <- ggplot(data, aes(x = Tranche_horaire)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Distribution des accidents par tranche horaire") +
theme_minimal() +
scale_x_discrete(na.rm = TRUE)
plot4 <- ggplot(data, aes(x = Tranche_horaire)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Distribution des accidents par tranche horaire") +
theme_minimal() +
scale_x_discrete(NA.rm = TRUE)
# Créer un facteur ordonné avec les niveaux les heures
data$Tranche_horaire <- factor(data$Tranche_horaire, levels = c("Matin", "Apres-midi", "Soir", "Nuit", "NA"))
plot4 <- ggplot(data, aes(x = Tranche_horaire)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Distribution des accidents par tranche horaire") +
theme_minimal() +
scale_x_discrete(NA.rm = TRUE)
# Créer un facteur ordonné avec les niveaux les heures
data$Tranche_horaire <- factor(data$Tranche_horaire, levels = c("Matin", "Apres-midi", "Soir", "Nuit", "NA"))
filtered_data <- data[!is.na(data$Tranche_horaire), ]
# Créer le graphique avec les données filtrées
plot4 <- ggplot(filtered_data, aes(x = Tranche_horaire)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Distribution des accidents par tranche horaire") +
theme_minimal()
# Organiser les graphiques en une disposition 2x2
grid.arrange(plot1, plot2, plot3, plot4, ncol = 2)
plot1 <- ggplot(data, aes(x = an)) +
geom_histogram(breaks = seq(min(data$an), max(data$an)),
width = 2, fill = "skyblue", color = "black", alpha = 0.7) +
geom_density(alpha = 0.2) +
labs(title = "Accidents par an") +
theme_minimal()
# Créer un facteur ordonné avec les niveaux des mois
data$mois <- factor(data$mois, levels = c("janvier", "fevrier", "mars", "avril", "mai", "juin", "juillet", "aout", "septembre", "octobre", "novembre", "decembre"))
plot2 <- ggplot(data, aes(x = mois)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Accidents par mois") +
theme_minimal() +
scale_x_discrete(breaks = c("janvier", "avril", "aout", "decembre"))
# Créer un facteur ordonné avec les niveaux des jours
data$jour <- factor(data$jour, levels = c("lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi", "dimanche"))
plot3 <- ggplot(data, aes(x = jour)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Accidents par jour") +
theme_minimal() +
scale_x_discrete(breaks = c("lundi", "mercredi", "vendredi", "dimanche"))
# Créer un facteur ordonné avec les niveaux les heures
data$Tranche_horaire <- factor(data$Tranche_horaire, levels = c("Matin", "Apres-midi", "Soir", "Nuit", "NA"))
filtered_data <- data[!is.na(data$Tranche_horaire), ]
# Créer le graphique avec les données filtrées
plot4 <- ggplot(filtered_data, aes(x = Tranche_horaire)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Accidents par tranche horaire") +
theme_minimal()
# Organiser les graphiques en une disposition 2x2
grid.arrange(plot1, plot2, plot3, plot4, ncol = 2)
plot1 <- ggplot(data, aes(x = an)) +
geom_histogram(breaks = seq(min(data$an), max(data$an)),
width = 2, fill = "skyblue", color = "black", alpha = 0.7) +
geom_density(alpha = 0.2) +
labs(title = "Accidents par an") +
theme_minimal()
# Créer un facteur ordonné avec les niveaux des mois
data$mois <- factor(data$mois, levels = c("janvier", "fevrier", "mars", "avril", "mai", "juin", "juillet", "aout", "septembre", "octobre", "novembre", "decembre"))
plot2 <- ggplot(data, aes(x = mois)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Accidents par mois") +
ylab("Nb accidents") +
theme_minimal() +
scale_x_discrete(breaks = c("janvier", "avril", "aout", "decembre"))
# Créer un facteur ordonné avec les niveaux des jours
data$jour <- factor(data$jour, levels = c("lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi", "dimanche"))
plot3 <- ggplot(data, aes(x = jour)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Accidents par jour") +
theme_minimal() +
scale_x_discrete(breaks = c("lundi", "mercredi", "vendredi", "dimanche"))
# Créer un facteur ordonné avec les niveaux les heures
data$Tranche_horaire <- factor(data$Tranche_horaire, levels = c("Matin", "Apres-midi", "Soir", "Nuit", "NA"))
filtered_data <- data[!is.na(data$Tranche_horaire), ]
# Créer le graphique avec les données filtrées
plot4 <- ggplot(filtered_data, aes(x = Tranche_horaire)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Accidents par tranche horaire") +
theme_minimal()
# Organiser les graphiques en une disposition 2x2
grid.arrange(plot1, plot2, plot3, plot4, ncol = 2)
plot1 <- ggplot(data, aes(x = an)) +
geom_histogram(breaks = seq(min(data$an), max(data$an)),
width = 2, fill = "skyblue", color = "black", alpha = 0.7) +
geom_density(alpha = 0.2) +
labs(title = "Accidents par an") +
ylab("Nb accidents") +
theme_minimal()
# Créer un facteur ordonné avec les niveaux des mois
data$mois <- factor(data$mois, levels = c("janvier", "fevrier", "mars", "avril", "mai", "juin", "juillet", "aout", "septembre", "octobre", "novembre", "decembre"))
plot2 <- ggplot(data, aes(x = mois)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Accidents par mois") +
ylab("Nb accidents") +
theme_minimal() +
scale_x_discrete(breaks = c("janvier", "avril", "aout", "decembre"))
# Créer un facteur ordonné avec les niveaux des jours
data$jour <- factor(data$jour, levels = c("lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi", "dimanche"))
plot3 <- ggplot(data, aes(x = jour)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Accidents par jour") +
ylab("Nb accidents") +
theme_minimal() +
scale_x_discrete(breaks = c("lundi", "mercredi", "vendredi", "dimanche"))
# Créer un facteur ordonné avec les niveaux les heures
data$Tranche_horaire <- factor(data$Tranche_horaire, levels = c("Matin", "Apres-midi", "Soir", "Nuit", "NA"))
filtered_data <- data[!is.na(data$Tranche_horaire), ]
# Créer le graphique avec les données filtrées
plot4 <- ggplot(filtered_data, aes(x = Tranche_horaire)) +
geom_bar(fill = "skyblue", color = "black") +
ylab("Nb accidents") +
labs(title = "Accidents par tranche horaire") +
theme_minimal()
# Organiser les graphiques en une disposition 2x2
grid.arrange(plot1, plot2, plot3, plot4, ncol = 2)
knitr::opts_chunk$set(fig.pos = "H", out.width = "80%", fig.align = "center")
###### Charger les différentes librairies
library(installr)
library(lmtest)
library(tidyverse)
library(data.table)
library(magrittr)
library(DAAG)
library(plotly)
library(tseries)
library(olsrr)
library(car)
library(readr)
library(readxl)
library(dplyr)
library(FactoMineR)
library(factoextra)
library(openxlsx)
library(Factoshiny)
library(gridExtra)
################## Analyses univariées #################################
data <- read.table("C:/Users/33662/Desktop/add_velo/data/data_clean.txt", sep=",", header = TRUE)
data <- data %>%
mutate(dep = as.numeric(dep))
data <- data %>%
mutate(long = as.numeric(long))
plot1 <- ggplot(data, aes(x = an)) +
geom_histogram(breaks = seq(min(data$an), max(data$an)),
width = 2, fill = "skyblue", color = "black", alpha = 0.7) +
geom_density(alpha = 0.2) +
labs(title = "Accidents par an") +
ylab("Nb accidents") +
theme_minimal()
# Créer un facteur ordonné avec les niveaux des mois
data$mois <- factor(data$mois, levels = c("janvier", "fevrier", "mars", "avril", "mai", "juin", "juillet", "aout", "septembre", "octobre", "novembre", "decembre"))
plot2 <- ggplot(data, aes(x = mois)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Accidents par mois") +
ylab("Nb accidents") +
theme_minimal() +
scale_x_discrete(breaks = c("janvier", "avril", "aout", "decembre"))
# Créer un facteur ordonné avec les niveaux des jours
data$jour <- factor(data$jour, levels = c("lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi", "dimanche"))
plot3 <- ggplot(data, aes(x = jour)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Accidents par jour") +
ylab("Nb accidents") +
theme_minimal() +
scale_x_discrete(breaks = c("lundi", "mercredi", "vendredi", "dimanche"))
# Créer un facteur ordonné avec les niveaux les heures
data$Tranche_horaire <- factor(data$Tranche_horaire, levels = c("Matin", "Apres-midi", "Soir", "Nuit", "NA"))
filtered_data <- data[!is.na(data$Tranche_horaire), ]
# Créer le graphique avec les données filtrées
plot4 <- ggplot(filtered_data, aes(x = Tranche_horaire)) +
geom_bar(fill = "skyblue", color = "black") +
ylab("Nb accidents") +
labs(title = "Accidents par tranche horaire") +
theme_minimal()
# Organiser les graphiques en une disposition 2x2
grid.arrange(plot1, plot2, plot3, plot4, ncol = 2)
################## Analyses univariées #################################
data <- read.table("C:/Users/33662/Desktop/add_velo/data/data_clean.txt", sep=",", header = TRUE)
data <- data %>%
mutate(dep = as.numeric(dep))
data <- data %>%
mutate(long = as.numeric(long))
plot1 <- ggplot(data, aes(x = an)) +
geom_histogram(breaks = seq(min(data$an), max(data$an)),
width = 2, fill = "skyblue", color = "black", alpha = 0.7) +
geom_density(alpha = 0.2) +
labs(title = "Accidents par an") +
ylab("Nb accidents") +
theme_minimal()
# Créer un facteur ordonné avec les niveaux des mois
data$mois <- factor(data$mois, levels = c("janvier", "fevrier", "mars", "avril", "mai", "juin", "juillet", "aout", "septembre", "octobre", "novembre", "decembre"))
plot2 <- ggplot(data, aes(x = mois)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Accidents par mois") +
ylab("Nb accidents") +
theme_minimal() +
scale_x_discrete(breaks = c("janvier", "avril", "aout", "decembre"))
# Créer un facteur ordonné avec les niveaux des jours
data$jour <- factor(data$jour, levels = c("lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi", "dimanche"))
plot3 <- ggplot(data, aes(x = jour)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Accidents par jour") +
ylab("Nb accidents") +
theme_minimal() +
scale_x_discrete(breaks = c("lundi", "mercredi", "vendredi", "dimanche"))
# Créer un facteur ordonné avec les niveaux les heures
data$Tranche_horaire <- factor(data$Tranche_horaire, levels = c("Matin", "Apres-midi", "Soir", "Nuit", "NA"))
filtered_data <- data[!is.na(data$Tranche_horaire), ]
# Créer le graphique avec les données filtrées
plot4 <- ggplot(filtered_data, aes(x = Tranche_horaire)) +
geom_bar(fill = "skyblue", color = "black") +
ylab("Nb accidents") +
labs(title = "Accidents par tranche horaire") +
theme_minimal()
# Organiser les graphiques en une disposition 2x2
grid.arrange(plot1, plot2, plot3, plot4, ncol = 2)
################## Analyses univariées #################################
data <- read.table("C:/Users/33662/Desktop/add_velo/data/data_clean.txt", sep=",", header = TRUE)
data <- data %>%
mutate(dep = as.numeric(dep))
data <- data %>%
mutate(long = as.numeric(long))
plot1 <- ggplot(data, aes(x = an)) +
geom_histogram(breaks = seq(min(data$an), max(data$an)),
width = 2, fill = "skyblue", color = "black", alpha = 0.7) +
geom_density(alpha = 0.2) +
labs(title = "Accidents par an") +
ylab("Nb accidents") +
theme_minimal()
# Créer un facteur ordonné avec les niveaux des mois
data$mois <- factor(data$mois, levels = c("janvier", "fevrier", "mars", "avril", "mai", "juin", "juillet", "aout", "septembre", "octobre", "novembre", "decembre"))
plot2 <- ggplot(data, aes(x = mois)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Accidents par mois") +
ylab("Nb accidents") +
theme_minimal() +
scale_x_discrete(breaks = c("janvier", "avril", "aout", "decembre"))
# Créer un facteur ordonné avec les niveaux des jours
data$jour <- factor(data$jour, levels = c("lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi", "dimanche"))
plot3 <- ggplot(data, aes(x = jour)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Accidents par jour") +
ylab("Nb accidents") +
theme_minimal() +
scale_x_discrete(breaks = c("lundi", "mercredi", "vendredi", "dimanche"))
# Créer un facteur ordonné avec les niveaux les heures
data$Tranche_horaire <- factor(data$Tranche_horaire, levels = c("Matin", "Apres-midi", "Soir", "Nuit", "NA"))
filtered_data <- data[!is.na(data$Tranche_horaire), ]
# Créer le graphique avec les données filtrées
plot4 <- ggplot(filtered_data, aes(x = Tranche_horaire)) +
geom_bar(fill = "skyblue", color = "black") +
ylab("Nb accidents") +
labs(title = "Accidents par tranche horaire") +
theme_minimal()
# Organiser les graphiques en une disposition 2x2
grid.arrange(plot1, plot2, plot3, plot4, ncol = 2)
################## Analyses univariées #################################
data <- read.table("C:/Users/33662/Desktop/add_velo/data/data_clean.txt", sep=",", header = TRUE)
data <- data %>%
mutate(dep = as.numeric(dep))
data <- data %>%
mutate(long = as.numeric(long))
plot1 <- ggplot(data, aes(x = an)) +
geom_histogram(breaks = seq(min(data$an), max(data$an)),
width = 2, fill = "skyblue", color = "black", alpha = 0.7) +
geom_density(alpha = 0.2) +
labs(title = "Accidents par an") +
ylab("Nb accidents") +
theme_minimal()
# Créer un facteur ordonné avec les niveaux des mois
data$mois <- factor(data$mois, levels = c("janvier", "fevrier", "mars", "avril", "mai", "juin", "juillet", "aout", "septembre", "octobre", "novembre", "decembre"))
plot2 <- ggplot(data, aes(x = mois)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Accidents par mois") +
ylab("Nb accidents") +
theme_minimal() +
scale_x_discrete(breaks = c("janvier", "avril", "aout", "decembre"))
# Créer un facteur ordonné avec les niveaux des jours
data$jour <- factor(data$jour, levels = c("lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi", "dimanche"))
plot3 <- ggplot(data, aes(x = jour)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Accidents par jour") +
ylab("Nb accidents") +
theme_minimal() +
scale_x_discrete(breaks = c("lundi", "mercredi", "vendredi", "dimanche"))
# Créer un facteur ordonné avec les niveaux les heures
data$Tranche_horaire <- factor(data$Tranche_horaire, levels = c("Matin", "Apres-midi", "Soir", "Nuit", "NA"))
filtered_data <- data[!is.na(data$Tranche_horaire), ]
# Créer le graphique avec les données filtrées
plot4 <- ggplot(filtered_data, aes(x = Tranche_horaire)) +
geom_bar(fill = "skyblue", color = "black") +
ylab("Nb accidents") +
labs(title = "Accidents par tranche horaire") +
theme_minimal()
# Organiser les graphiques en une disposition 2x2
grid.arrange(plot1, plot2, plot3, plot4, ncol = 2)
################## Analyses univariées #################################
data <- read.table("C:/Users/33662/Desktop/add_velo/data/data_clean.txt", sep=",", header = TRUE)
data <- data %>%
mutate(dep = as.numeric(dep))
data <- data %>%
mutate(long = as.numeric(long))
plot1 <- ggplot(data, aes(x = an)) +
geom_histogram(breaks = seq(min(data$an), max(data$an)),
width = 2, fill = "skyblue", color = "black", alpha = 0.7) +
geom_density(alpha = 0.2) +
labs(title = "Accidents par an") +
ylab("Nb accidents") +
theme_minimal()
# Créer un facteur ordonné avec les niveaux des mois
data$mois <- factor(data$mois, levels = c("janvier", "fevrier", "mars", "avril", "mai", "juin", "juillet", "aout", "septembre", "octobre", "novembre", "decembre"))
plot2 <- ggplot(data, aes(x = mois)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Accidents par mois") +
ylab("Nb accidents") +
theme_minimal() +
scale_x_discrete(breaks = c("janvier", "avril", "aout", "decembre"))
# Créer un facteur ordonné avec les niveaux des jours
data$jour <- factor(data$jour, levels = c("lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi", "dimanche"))
plot3 <- ggplot(data, aes(x = jour)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Accidents par jour") +
ylab("Nb accidents") +
theme_minimal() +
scale_x_discrete(breaks = c("lundi", "mercredi", "vendredi", "dimanche"))
# Créer un facteur ordonné avec les niveaux les heures
data$Tranche_horaire <- factor(data$Tranche_horaire, levels = c("Matin", "Apres-midi", "Soir", "Nuit", "NA"))
filtered_data <- data[!is.na(data$Tranche_horaire), ]
# Créer le graphique avec les données filtrées
plot4 <- ggplot(filtered_data, aes(x = Tranche_horaire)) +
geom_bar(fill = "skyblue", color = "black") +
ylab("Nb accidents") +
labs(title = "Accidents par tranche horaire") +
theme_minimal()
# Organiser les graphiques en une disposition 2x2
grid.arrange(plot1, plot2, plot3, plot4, ncol = 2)
knitr::opts_chunk$set(fig.pos = "H", out.width = "100%", fig.align = "center")
###### Charger les différentes librairies
library(installr)
library(lmtest)
library(tidyverse)
library(data.table)
library(magrittr)
library(DAAG)
library(plotly)
library(tseries)
library(olsrr)
library(car)
library(readr)
library(readxl)
library(dplyr)
library(FactoMineR)
library(factoextra)
library(openxlsx)
library(Factoshiny)
library(gridExtra)
################## Analyses univariées #################################
data <- read.table("C:/Users/33662/Desktop/add_velo/data/data_clean.txt", sep=",", header = TRUE)
data <- data %>%
mutate(dep = as.numeric(dep))
data <- data %>%
mutate(long = as.numeric(long))
plot1 <- ggplot(data, aes(x = an)) +
geom_histogram(breaks = seq(min(data$an), max(data$an)),
width = 2, fill = "skyblue", color = "black", alpha = 0.7) +
geom_density(alpha = 0.2) +
labs(title = "Accidents par an") +
ylab("Nb accidents") +
theme_minimal()
# Créer un facteur ordonné avec les niveaux des mois
data$mois <- factor(data$mois, levels = c("janvier", "fevrier", "mars", "avril", "mai", "juin", "juillet", "aout", "septembre", "octobre", "novembre", "decembre"))
plot2 <- ggplot(data, aes(x = mois)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Accidents par mois") +
ylab("Nb accidents") +
theme_minimal() +
scale_x_discrete(breaks = c("janvier", "avril", "aout", "decembre"))
# Créer un facteur ordonné avec les niveaux des jours
data$jour <- factor(data$jour, levels = c("lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi", "dimanche"))
plot3 <- ggplot(data, aes(x = jour)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Accidents par jour") +
ylab("Nb accidents") +
theme_minimal() +
scale_x_discrete(breaks = c("lundi", "mercredi", "vendredi", "dimanche"))
# Créer un facteur ordonné avec les niveaux les heures
data$Tranche_horaire <- factor(data$Tranche_horaire, levels = c("Matin", "Apres-midi", "Soir", "Nuit", "NA"))
filtered_data <- data[!is.na(data$Tranche_horaire), ]
# Créer le graphique avec les données filtrées
plot4 <- ggplot(filtered_data, aes(x = Tranche_horaire)) +
geom_bar(fill = "skyblue", color = "black") +
ylab("Nb accidents") +
labs(title = "Accidents par tranche horaire") +
theme_minimal()
# Organiser les graphiques en une disposition 2x2
grid.arrange(plot1, plot2, plot3, plot4, ncol = 2)
######################### PISTE CYCLABLE VELO PARIS ########################################
data_piste_paris <- read.table("C:/Users/33662/Desktop/add_velo/data/data_cycle-piste.csv", sep=",", header = TRUE)
######################### ARRONDISSEMENT AVEC ACC VELO PARIS ########################################
data_arr_paris <- read.table("C:/Users/33662/Desktop/add_velo/data/data_paris_arron-acc.csv", sep=",", header = TRUE)
######################### ACCIDENTS VELO FRANCE #################################
data <- read.table("C:/Users/33662/Desktop/add_velo/data/data_clean.txt", sep=",", header = TRUE)
data <- data %>%
mutate(dep = as.numeric(dep))
data <- data %>%
mutate(long = as.numeric(long))
######################### ARRONDISSEMENT AVEC ACC VELO PARIS ########################################
data_arr_paris <- read.table("C:/Users/33662/Desktop/add_velo/data/data_paris_arron-acc.csv", sep=",", header = TRUE)
############################## ANALYSE PARIS #########################################
data_acc_paris <- filter(data, dep == "75")
data_acc_paris <- select(data_acc_paris, -c(X, dep))
#####################" MERGE data_arr_paris & data_acc_paris avec lat et long comme clés unique ##########
merge_paris <- merge(data_arr_paris, data_acc_paris, by = c("lat", "long"))
view(merge_paris)
######################### ACCIDENTS VELO FRANCE #################################
data <- read.table("C:/Users/33662/Desktop/add_velo/data/data_clean.csv", sep=",", header = TRUE)
######################### ACCIDENTS VELO FRANCE #################################
data <- read.csv("C:/Users/33662/Desktop/add_velo/data/data_clean.csv", sep=",", header = TRUE)
data <- data %>%
mutate(dep = as.numeric(dep))
data <- data %>%
mutate(long = as.numeric(long))
View(data)
############################## ANALYSE PARIS #########################################
data_acc_paris <- filter(data, dep == "75")
data_acc_paris <- select(data_acc_paris, -c(X, dep))
View(data)
colnames(data)
############################## ANALYSE PARIS #########################################
data_acc_paris <- filter(data, dep == "75")
data_acc_paris <- select(data_acc_paris, -c(Unnamed..0, dep))
colnames(data_acc_paris)
unique(data_acc_paris$Region)
#####################" MERGE data_arr_paris & data_acc_paris avec lat et long comme clés unique ##########
merge_paris <- merge(data_arr_paris, data_acc_paris, by = c("lat", "long"))
view(merge_paris)
summary(merge_paris)
##################### Export vers fichier csv ##########################
ma_data_table <- as.data.table(merge_paris)
library(writexl)
write.csv(ma_data_table, "C:/Users/33662/Desktop/add_velo/data/data_paris.csv")
############################# Verif export ################################
library(readr)
data <- read.table("C:/Users/33662/Desktop/add_velo/data/data_paris.csv", sep=",", header = TRUE)
table(data$Arrondissement)
sum(is.na(data$Arrondissement))
data <- read.table("C:/Users/33662/Desktop/add_velo/data/data_clean.csv", sep=",", header = TRUE)
data <- read.csv("C:/Users/33662/Desktop/add_velo/data/data_clean.csv", sep=",", header = TRUE)
data <- data %>%
mutate(dep = as.numeric(dep))
data <- data %>%
mutate(long = as.numeric(long))
plot1 <- ggplot(data, aes(x = an)) +
geom_histogram(breaks = seq(min(data$an), max(data$an)),
width = 2, fill = "skyblue", color = "black", alpha = 0.7) +
geom_density(alpha = 0.2) +
labs(title = "Accidents par an") +
ylab("Nb accidents") +
theme_minimal()
# Créer un facteur ordonné avec les niveaux des mois
data$mois <- factor(data$mois, levels = c("janvier", "fevrier", "mars", "avril", "mai", "juin", "juillet", "aout", "septembre", "octobre", "novembre", "decembre"))
plot2 <- ggplot(data, aes(x = mois)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Accidents par mois") +
ylab("Nb accidents") +
theme_minimal() +
scale_x_discrete(breaks = c("janvier", "avril", "aout", "decembre"))
# Créer un facteur ordonné avec les niveaux des jours
data$jour <- factor(data$jour, levels = c("lundi", "mardi", "mercredi", "jeudi", "vendredi", "samedi", "dimanche"))
plot3 <- ggplot(data, aes(x = jour)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Accidents par jour") +
ylab("Nb accidents") +
theme_minimal() +
scale_x_discrete(breaks = c("lundi", "mercredi", "vendredi", "dimanche"))
# Créer un facteur ordonné avec les niveaux les heures
data$Tranche_horaire <- factor(data$Tranche_horaire, levels = c("Matin", "Apres-midi", "Soir", "Nuit", "NA"))
filtered_data <- data[!is.na(data$Tranche_horaire), ]
# Créer le graphique avec les données filtrées
plot4 <- ggplot(filtered_data, aes(x = Tranche_horaire)) +
geom_bar(fill = "skyblue", color = "black") +
ylab("Nb accidents") +
labs(title = "Accidents par tranche horaire") +
theme_minimal()
# Organiser les graphiques en une disposition 2x2
grid.arrange(plot1, plot2, plot3, plot4, ncol = 2)
